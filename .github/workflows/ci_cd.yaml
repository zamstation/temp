name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  DEPLOYER_REPOSITORY: https://raw.githubusercontent.com/zamstation/dart_package_deployer/main
  CACHE_KEY_FILE: cache_key.txt
  CACHE_KEY_PREFIX: dart-package-workspace

jobs:
  initialize:
    name: Initialize
    runs-on: ubuntu-latest

    steps:
      - name: Extract Cache Key
        id: extract-cache-key
        run: |
          curl -s -o $CACHE_KEY_FILE $DEPLOYER_REPOSITORY/version.txt
          cacheKey="$CACHE_KEY_PREFIX-$(cat $CACHE_KEY_FILE)"
          echo "Cache Key: $cacheKey"
          echo "::set-output name=cacheKey::$cacheKey"

      - name: Extract Workspace From Cache
        id: cache-scripts
        uses: actions/cache@v2
        with:
          path: workspace
          key: ${{ steps.extract-cache-key.outputs.cacheKey }}

      - name: Download Deploy Tools
        if: steps.cache-scripts.outputs.cache-hit != 'true'
        run: |
          git clone https://github.com/zamstation/dart_package_deployer.git
          ls -ltr
          cd dart_package_deployer/scripts
          ls -ltr
        # run: bash <(curl -s $DEPLOYER_REPOSITORY/main.sh)

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [initialize]
    if: "false"

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Extract Cache Key
        id: extract-cache-key
        run: |
          cacheKey=$(curl -s $DEPLOYER_REPOSITORY/version.txt)
          echo "Cache Key: $cacheKey"
          echo "DEPLOYER_REPOSITORY: $DEPLOYER_REPOSITORY"
          echo "::set-output name=CACHE_KEY::$cacheKey"

      - name: Extract Scripts From Cache
        id: cache-scripts
        uses: actions/cache@v2
        with:
          path: .temp
          key: ${{ steps.extract-cache-key.outputs.CACHE_KEY }}

      - name: Download Scripts
        if: steps.cache-scripts.outputs.cache-hit != 'true'
        run: bash <(curl -s $DEPLOYER_REPOSITORY/download.sh)

  validate:
    name: Validate
    runs-on: ubuntu-latest
    needs: [build]
    if: "false"

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Extract Cache Key
        id: extract-cache-key
        run: |
          cacheKey=$(curl -s $DEPLOYER_REPOSITORY/version.txt)
          echo "Cache Key: $cacheKey"
          echo "::set-output name=CACHE_KEY::$cacheKey"

      - name: Extract Scripts From Cache
        id: cache-scripts
        uses: actions/cache@v2
        with:
          path: .temp
          key: ${{ steps.extract-cache-key.outputs.CACHE_KEY }}

      - name: Install Dart
        uses: dart-lang/setup-dart@v1

      - name: Analyze
        run: bash .temp/analyze.sh

      - name: Validate
        run: bash .temp/validate.sh

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: [validate]
    if: "false"

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Extract Cache Key
        id: extract-cache-key
        run: |
          cacheKey=$(curl -s $DEPLOYER_REPOSITORY/version.txt)
          echo "Cache Key: $cacheKey"
          echo "::set-output name=CACHE_KEY::$cacheKey"

      - name: Extract Scripts From Cache
        id: cache-scripts
        uses: actions/cache@v2
        with:
          path: .temp
          key: ${{ steps.extract-cache-key.outputs.CACHE_KEY }}

      - name: Install Dart
        uses: dart-lang/setup-dart@v1

      - name: Test
        run: bash .temp/test.sh

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: [test]
    if: "false"

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Extract Cache Key
        id: extract-cache-key
        run: |
          cacheKey=$(curl -s $DEPLOYER_REPOSITORY/version.txt)
          echo "Cache Key: $cacheKey"
          echo "::set-output name=CACHE_KEY::$cacheKey"

      - name: Extract Scripts From Cache
        id: cache-scripts
        uses: actions/cache@v2
        with:
          path: .temp
          key: ${{ steps.extract-cache-key.outputs.CACHE_KEY }}

      - name: Install Dart
        uses: dart-lang/setup-dart@v1

      - name: Publish
        run: bash .temp/publish.sh
