name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    env:
      CI_CD_REPO: https://raw.githubusercontent.com/zamstation/dart_package_ci_cd/main
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Extract Cache Key
        id: extract-cache-key
        run: |
          cacheKey=$(curl -s $CI_CD_REPO/version.txt)
          echo "Cache Key: $cacheKey"
          echo "::set-output name=CACHE_KEY::$cacheKey"

      - name: Cache Scripts
        id: cache-scripts
        uses: actions/cache@v2
        with:
          path: temp
          key: ${{ steps.extract-cache-key.outputs.CACHE_KEY }}

      - name: Download Scripts
        if: steps.cache-scripts.outputs.cache-hit != 'true'
        run: bash <(curl -s $CI_CD_REPO/download.sh)

      - name: Export Artifact
        uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: .
          retention-days: 1

  validate:
    name: Validate
    runs-on: ubuntu-latest
    needs: [prepare]

    steps:
      - name: Import Artifact
        uses: actions/download-artifact@v2
        with:
          name: artifact

      - name: Analyze
        uses: dart-lang/setup-dart@v1
        run: bash temp/analyze.sh

      - name: Validate
        run: bash temp/validate.sh

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: [validate]

    steps:
      - name: Import Artifact
        uses: actions/download-artifact@v2
        with:
          name: artifact

      - name: Test
        uses: dart-lang/setup-dart@v1
        run: bash temp/test.sh

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: [test]

    steps:
      - name: Import Artifact
        uses: actions/download-artifact@v2
        with:
          name: artifact

      - name: Publish
        uses: dart-lang/setup-dart@v1
        run: bash temp/publish.sh
